Project: naive-ticket-machine
Authors: David Barnes and Michael Kölling

This project is part of the material for the book

   Objects First with Java - A Practical Introduction using BlueJ
   Seventh edition
   David J. Barnes and Michael Kölling
   Pearson Education

It is discussed in chapter 2.

Purpose of project: To illustrate the basics of fields, constructors, and methods.
How to start this project: Create one or more TicketMachine objects.

<<<<<<< HEAD
=======
******Answers to the questions:******
2.The value returned after you printed the ticket is 0.
3.After inserting too much or too little amount of money into the machine, the printed ticket does no give you a refund. It will automatically set it as if you paid the exact amount.
4.Nothing really changed but the the amount due for the ticket.
5.The outer wrapper of the Students and Labclass might have looked like:
public class Labclass
public int numberOfStudents()
6. It does matter. The class diagram changed to red stripes and you can not compile the class.
<<<<<<< HEAD

=======
12. int, string, string
<<<<<<< HEAD
>>>>>>> 4fc6a82f04687a1518aa812bf79dc363be4e929c
=======
13. alive, tutor and game.
>>>>>>> 9fb5ead599e631f34a2633b398752cc758786a67

14.count, Student, Server, boolean, Person, Game.

15.The order of the three words do count.

16. It is important to add the semicolon after a line of code.

17. public int status;

18.Student.

19. There are two and their type is String and double

20.we can know.

21.public Pet(String petsName)
{
 private String name
}

22.challenge: public newDate(String "month", String day , String year)
{
"month"= "March";
day=23;
year=1861;
}

23.The difference between the two is the class name 

24."What do I get back?"

25.It dosne't have to be changed. 